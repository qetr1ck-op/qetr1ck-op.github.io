<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angularjs on OP blog</title>
    <link>https://qetr1ck-op.github.io/blog/categories/angularjs/</link>
    <description>Recent content in Angularjs on OP blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 18 Sep 2016 19:03:17 +0000</lastBuildDate>
    
	<atom:link href="https://qetr1ck-op.github.io/blog/categories/angularjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NG6 starter for new Angular projects</title>
      <link>https://qetr1ck-op.github.io/blog/post/2016/09/ng6-starter-for-new-angular-projects/</link>
      <pubDate>Sun, 18 Sep 2016 19:03:17 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2016/09/ng6-starter-for-new-angular-projects/</guid>
      <description>&lt;p&gt;The de-facto starter repo for building scalable apps with AngularJS ^1.5, ES6, Gulp and Webpack&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Start new project on Angular ^1.5</title>
      <link>https://qetr1ck-op.github.io/blog/post/2016/09/start-new-project-on-angular-1-5/</link>
      <pubDate>Sun, 18 Sep 2016 18:42:49 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2016/09/start-new-project-on-angular-1-5/</guid>
      <description>&lt;p&gt;Great series of recommendation how/why to start new &amp;ldquo;NG2 ready&amp;rdquo; Angular 1.5 app with architecture of component-oriented approach.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lifecycle hooks in AngularJS 1.5</title>
      <link>https://qetr1ck-op.github.io/blog/post/2016/09/lifecycle-hooks-in-angularjs-1-5/</link>
      <pubDate>Sun, 04 Sep 2016 10:48:03 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2016/09/lifecycle-hooks-in-angularjs-1-5/</guid>
      <description>&lt;p&gt;Lifecycle hooks are simple functions that are called at specific points of a component&amp;rsquo;s life in Angular apps. They landed in AngularJS 1.5 and are used with &lt;code&gt;.component()&lt;/code&gt; method and they were inspired of Angular 2 hooks.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Moving from &#34;ngModel.$parsers&#34;/&#34;ng-if&#34; to &#34;ngModel.$validators&#34;/&#34;ngMessages&#34;</title>
      <link>https://qetr1ck-op.github.io/blog/post/2016/09/moving-from-ngmodel-parsers-ng-if-to-ngmodel-validators-ngmessages/</link>
      <pubDate>Sat, 03 Sep 2016 22:24:46 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2016/09/moving-from-ngmodel-parsers-ng-if-to-ngmodel-validators-ngmessages/</guid>
      <description>&lt;p&gt;Implementation custom Model validation is typically done by extending the built-in &lt;code&gt;$error&lt;/code&gt; object to &lt;code&gt;ngForm&lt;/code&gt; models.&lt;/p&gt;

&lt;p&gt;Prior to AngularJS 1.3 custom validation was done by injecting a function into the &lt;code&gt;ngModel.$parsers&lt;/code&gt; array pipeline and manually setting validation states using &lt;code&gt;$setValidity(&#39;visa&#39;, true)&lt;/code&gt; if the Model value matched a Visa credit card expression format, for example.&lt;/p&gt;

&lt;p&gt;AngularJS 1.3+ has the &lt;code&gt;$validators&lt;/code&gt; pipeline object, which requires no manual setting of validation states.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take a look of old school way then we can shift to &lt;code&gt;ngModel.$validators&lt;/code&gt; technique.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Front End Interview Questions</title>
      <link>https://qetr1ck-op.github.io/blog/post/2016/08/front-end-interview-questions/</link>
      <pubDate>Sun, 14 Aug 2016 11:39:13 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2016/08/front-end-interview-questions/</guid>
      <description>&lt;p&gt;To rock the interview to achieve what you deserve and to improve your concepts about front end technologies, I have consolidated a list of questions and answers. It&amp;rsquo;s a one stop solution for front end interview process.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Exploring AngularJS 1.5 .component() method</title>
      <link>https://qetr1ck-op.github.io/blog/post/2016/07/exploring-angularjs-1-5-component-method/</link>
      <pubDate>Fri, 22 Jul 2016 22:20:03 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2016/07/exploring-angularjs-1-5-component-method/</guid>
      <description>&lt;p&gt;AngularJS 1.5 introduce &lt;code&gt;.component()&lt;/code&gt; helper method which is much simpler than the &lt;code&gt;.directive()&lt;/code&gt; definitions and advocates best practices and common default behavior.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;.component()&lt;/code&gt; will allow to write in Angular 2 style as well, which will turn transition to Angular 2 much easier.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s compare the difference in syntax and the possibility of new abstraction.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TOP 10 mistakes when you develop on AngularJS</title>
      <link>https://qetr1ck-op.github.io/blog/post/2015/09/top-10-mistakes-when-you-develop-on-angularjs/</link>
      <pubDate>Wed, 23 Sep 2015 18:40:03 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2015/09/top-10-mistakes-when-you-develop-on-angularjs/</guid>
      <description>&lt;p&gt;The top 10 mistakes when beginners start to develop on AngularJS.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Firebase and AngularJS</title>
      <link>https://qetr1ck-op.github.io/blog/post/2014/12/firebase-and-angularjs/</link>
      <pubDate>Wed, 10 Dec 2014 23:45:45 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2014/12/firebase-and-angularjs/</guid>
      <description>&lt;p&gt;AngularFire is the officially supported AngularJS binding for Firebase. The combination of Angular and Firebase provides a three-way data binding between your HTML, your, JavaScript, and the Firebase database.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Class manipulation in Javascript, jQuery and AngularJS</title>
      <link>https://qetr1ck-op.github.io/blog/post/2014/07/class-manipulation-in-javascript-jquery-and-angularjs/</link>
      <pubDate>Wed, 02 Jul 2014 23:24:37 +0000</pubDate>
      
      <guid>https://qetr1ck-op.github.io/blog/post/2014/07/class-manipulation-in-javascript-jquery-and-angularjs/</guid>
      <description>&lt;p&gt;In this article, I would like to create short reference for how &lt;code&gt;add/remove/toogle&lt;/code&gt; class in pure Javascript and with framework.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>